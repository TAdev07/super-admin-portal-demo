{"version":3,"file":"__federation_expose_Widget-CwdiZpnc.js","sources":["../../src/sdk/shell-bridge.ts","../../src/Widget.tsx"],"sourcesContent":["/**\n * ShellBridge SDK for Module Federation remotes\n * The host (super-admin-shell) passes a set of handler props to the remote.\n * This SDK provides a small, typed wrapper over those handlers.\n */\n\nexport type HostHandlers = {\n  onRequestToken?: (scopes: string[]) => Promise<string>\n  onGetProfile?: () => Promise<unknown> | unknown\n  onGetApps?: () => Promise<unknown[]> | unknown[]\n  onLogout?: () => Promise<void> | void\n}\n\nexport class ShellBridge {\n  constructor(private handlers: HostHandlers) {}\n\n  async getToken(scopes: string[]): Promise<string> {\n    if (!this.handlers.onRequestToken) throw new Error('Host handler onRequestToken not provided')\n    return this.handlers.onRequestToken(scopes)\n  }\n\n  async getProfile<T = unknown>(): Promise<T | null> {\n    const fn = this.handlers.onGetProfile\n    if (!fn) return null\n    const v = await Promise.resolve(fn())\n    return v as T\n  }\n\n  async getApps<T = unknown>(): Promise<T[]> {\n    const fn = this.handlers.onGetApps\n    if (!fn) return []\n    const v = await Promise.resolve(fn())\n    return v as T[]\n  }\n\n  async logout(): Promise<void> {\n    const fn = this.handlers.onLogout\n    if (!fn) return\n    await Promise.resolve(fn())\n  }\n}\n\nexport function createShellBridge(h: HostHandlers) {\n  return new ShellBridge(h)\n}\n","import React from 'react';\nimport { createShellBridge, type HostHandlers } from './sdk/shell-bridge';\n\ntype Props = HostHandlers & {\n  title?: string;\n  defaultScopes?: string[];\n};\n\nexport default function Widget({ title = 'MF Widget', defaultScopes = [], ...handlers }: Props) {\n  const bridge = React.useMemo(() => createShellBridge(handlers), [handlers]);\n  const [output, setOutput] = React.useState<string>('');\n\n  const run = async (fn: () => Promise<unknown>, label: string) => {\n    try {\n      setOutput(`${label} → running...`);\n      const res = await fn();\n      const text = typeof res === 'string' ? res : JSON.stringify(res, null, 2);\n      setOutput(`${label} → success\\n${text}`);\n    } catch (e) {\n      setOutput(`${label} → error: ${(e as Error).message}`);\n    }\n  };\n\n  return (\n    <div style={{ border: '1px solid #ddd', padding: 12, borderRadius: 8, maxWidth: 520 }}>\n      <strong>{title}</strong>\n      <div style={{ display: 'flex', gap: 8, flexWrap: 'wrap', marginTop: 8 }}>\n  <button onClick={() => run(() => bridge.getToken(defaultScopes), 'Get Token')}>Get Token</button>\n        <button onClick={() => run(() => bridge.getProfile(), 'Get Profile')}>Get Profile</button>\n        <button onClick={() => run(() => bridge.getApps(), 'Get Apps')}>Get Apps</button>\n        <button onClick={() => run(() => bridge.logout().then(() => 'OK'), 'Logout')}>Logout</button>\n      </div>\n      {output && (\n        <pre style={{\n          marginTop: 10,\n          background: '#f7f7f7',\n          padding: 8,\n          borderRadius: 6,\n          maxHeight: 220,\n          overflow: 'auto',\n          fontSize: 12\n        }}>{output}</pre>\n      )}\n    </div>\n  );\n}\n"],"names":["ShellBridge","handlers","scopes","fn","createShellBridge","h","jsx","jsxs","importShared","React","Widget","title","defaultScopes","bridge","output","setOutput","run","label","res","text","e"],"mappings":"oEAaO,MAAMA,CAAY,CACvB,YAAoBC,EAAwB,CAAxB,KAAA,SAAAA,CAAyB,CAE7C,MAAM,SAASC,EAAmC,CAChD,GAAI,CAAC,KAAK,SAAS,eAAgB,MAAM,IAAI,MAAM,0CAA0C,EAC7F,OAAO,KAAK,SAAS,eAAeA,CAAM,CAC5C,CAEA,MAAM,YAA6C,CACjD,MAAMC,EAAK,KAAK,SAAS,aACzB,OAAKA,EACK,MAAM,QAAQ,QAAQA,GAAI,EADpB,IAGlB,CAEA,MAAM,SAAqC,CACzC,MAAMA,EAAK,KAAK,SAAS,UACzB,OAAKA,EACK,MAAM,QAAQ,QAAQA,GAAI,EADpB,CAAA,CAGlB,CAEA,MAAM,QAAwB,CAC5B,MAAMA,EAAK,KAAK,SAAS,SACpBA,GACL,MAAM,QAAQ,QAAQA,GAAI,CAC5B,CACF,CAEO,SAASC,EAAkBC,EAAiB,CACjD,OAAO,IAAIL,EAAYK,CAAC,CAC1B,CCnBM,KAAA,CAAA,IAAAC,EAAA,KAAAC,CAAA,EAAA,MAAAC,EAAA,mBAAA,EAzBNC,EAAA,MAAAD,EAAA,OAAA,EAQA,SAAwBE,EAAO,CAAE,MAAAC,EAAQ,YAAa,cAAAC,EAAgB,CAAA,EAAI,GAAGX,GAAmB,CAC9F,MAAMY,EAASJ,EAAM,QAAQ,IAAML,EAAkBH,CAAQ,EAAG,CAACA,CAAQ,CAAC,EACpE,CAACa,EAAQC,CAAS,EAAIN,EAAM,SAAiB,EAAE,EAE/CO,EAAM,MAAOb,EAA4Bc,IAAkB,CAC/D,GAAI,CACFF,EAAU,GAAGE,CAAK,eAAe,EACjC,MAAMC,EAAM,MAAMf,EAAA,EACZgB,EAAO,OAAOD,GAAQ,SAAWA,EAAM,KAAK,UAAUA,EAAK,KAAM,CAAC,EACxEH,EAAU,GAAGE,CAAK;AAAA,EAAeE,CAAI,EAAE,CACzC,OAASC,EAAG,CACVL,EAAU,GAAGE,CAAK,aAAcG,EAAY,OAAO,EAAE,CACvD,CACF,EAEA,OACEb,EAAC,MAAA,CAAI,MAAO,CAAE,OAAQ,iBAAkB,QAAS,GAAI,aAAc,EAAG,SAAU,GAAA,EAC9E,SAAA,CAAAD,EAAC,UAAQ,SAAAK,CAAA,CAAM,EACfJ,EAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,EAAG,SAAU,OAAQ,UAAW,CAAA,EACxE,SAAA,CAAAD,EAAC,SAAA,CAAO,QAAS,IAAMU,EAAI,IAAMH,EAAO,SAASD,CAAa,EAAG,WAAW,EAAG,SAAA,WAAA,CAAS,EAClFN,EAAC,SAAA,CAAO,QAAS,IAAMU,EAAI,IAAMH,EAAO,WAAA,EAAc,aAAa,EAAG,SAAA,aAAA,CAAW,EACjFP,EAAC,SAAA,CAAO,QAAS,IAAMU,EAAI,IAAMH,EAAO,QAAA,EAAW,UAAU,EAAG,SAAA,UAAA,CAAQ,EACxEP,EAAC,SAAA,CAAO,QAAS,IAAMU,EAAI,IAAMH,EAAO,OAAA,EAAS,KAAK,IAAM,IAAI,EAAG,QAAQ,EAAG,SAAA,QAAA,CAAM,CAAA,EACtF,EACCC,GACCR,EAAC,MAAA,CAAI,MAAO,CACV,UAAW,GACX,WAAY,UACZ,QAAS,EACT,aAAc,EACd,UAAW,IACX,SAAU,OACV,SAAU,EAAA,EACR,SAAAQ,CAAA,CAAO,CAAA,EAEf,CAEJ"}